name: Main CI

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/main_ci.yml'
      - 'cmake/**'
      - 'include/**'
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Debug
  VCPKG_COMMITTISH: b361c2eefa3966cb7cec45275aff32e90430aaa6
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            cmake-generator: ninja
            cmake-platform: linux
            shell-extension: sh
          - os: windows-latest
            cmake-generator: vs2019
            cmake-platform: windows
            shell-extension: bat

    steps:
      - uses: actions/checkout@v2
        with:
          path: bsa
          submodules: 'true'

      - name: Set compiler
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV

      - name: Download Ninja
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip
          unzip ninja-linux.zip
          sudo mv ninja /usr/local/bin

      - name: Cache vcpkg
        uses: actions/cache@v2
        env:
          cache-name: vcpkg-cache
        with:
          path: vcpkg
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.VCPKG_COMMITTISH }}-${{ hashFiles('bsa/**/vcpkg.json') }}

      - name: Clone vcpkg
        if: ${{ steps.vcpkg-cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v2
        with:
          ref: ${{ env.VCPKG_COMMITTISH }}
          path: vcpkg
          repository: microsoft/vcpkg

      - name: Setup vcpkg
        if: ${{ steps.vcpkg-cache.outputs.cache-hit != 'true' }}
        run: ${{ env.VCPKG_ROOT }}/bootstrap-vcpkg.${{ matrix.shell-extension }}

      - name: Configure CMake
        run: cmake --preset ${{ matrix.cmake-generator }}-${{ matrix.cmake-platform }}-vcpkg -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBSA_BUILD_DOCS=OFF ${{ github.workspace }}/bsa

      - name: Build
        run: cmake --build ${{ github.workspace }}/bsa/build

      - name: Test
        working-directory: ${{ github.workspace }}/bsa/build
        run: ctest -C ${{ env.BUILD_TYPE }} -V
