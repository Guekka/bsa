name: Main CI

on:
  push:
    branches: [ master ]
    paths:
      - '.github/workflows/main_ci.yml'
      - 'cmake/**'
      - 'include/**'
      - 'src/**'
      - 'tests/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'vcpkg.json'
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Debug
  VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg-archives

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            cmake-generator: ninja
            cmake-platform: linux
            env-access: '$'
            shell-extension: sh
          - os: windows-latest
            cmake-generator: vs2019
            cmake-platform: windows
            env-access: '$env:'
            shell-extension: bat

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Set compiler
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV

      - name: Download Ninja
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip
          unzip ninja-linux.zip
          sudo mv ninja /usr/local/bin

      - name: Setup vcpkg
        run: |
          mkdir ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          cd ${{ matrix.env-access }}VCPKG_INSTALLATION_ROOT
          ./bootstrap-vcpkg.${{ matrix.shell-extension }}
          ./vcpkg --version > ${{ github.workspace }}/vcpkg-version

      - name: Cache vcpkg archives
        uses: actions/cache@v2
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/vcpkg.json', 'vcpkg-version') }}

      - name: Configure CMake
        run: cmake --preset ${{ matrix.cmake-generator }}-${{ matrix.cmake-platform }}-vcpkg -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBSA_BUILD_DOCS=OFF

      - name: Build
        run: cmake --build ${{ github.workspace }}/build

      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: ctest -C ${{ env.BUILD_TYPE }} -V

  update_badges_success:
    if: ${{ success() }}
    name: Update CI badges (passing)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Update CI badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.MAIN_CI_GIST }}
          gistID: 634174b328f6d356cf369bd94b3ecad6
          filename: bsa-main-ci.json
          color: success
          label: build
          message: passing
          namedLogo: github
          style: flat-square

  update_badges_failure:
    if: ${{ failure() }}
    name: Update CI badges (failing)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Update CI badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.MAIN_CI_GIST }}
          gistID: 634174b328f6d356cf369bd94b3ecad6
          filename: bsa-main-ci.json
          color: critical
          label: build
          message: failing
          namedLogo: github
          style: flat-square
